// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stratom.Form.Data;

namespace Stratom.Form.Data.Migrations
{
    [DbContext(typeof(StratomFormDbContext))]
    [Migration("20201108181200_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Stratom.Form.Core.Models.Activite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autre")
                        .HasColumnType("Text");

                    b.Property<int>("FicheId")
                        .HasColumnType("int");

                    b.Property<string>("Souscription")
                        .HasColumnType("Text");

                    b.HasKey("Id");

                    b.HasIndex("FicheId");

                    b.ToTable("Activites");
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.ActiviteType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FicheId")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FicheId");

                    b.ToTable("ActiviteTypes");
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.AssuranceDommage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autre")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("FicheId")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("FicheId");

                    b.ToTable("AssurancesDommage");
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.AssurancePersonne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autre")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("FicheId")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("FicheId");

                    b.ToTable("AssurancesPersonne");
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.Concerne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FicheId")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FicheId");

                    b.ToTable("Concernes");
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.ContratsPortefeuille", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autre")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("CotisationAnnuelle")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("DateSouscription")
                        .HasColumnType("Date");

                    b.Property<int>("FicheId")
                        .HasColumnType("int");

                    b.Property<string>("Garantie")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("FicheId");

                    b.ToTable("ContratsPortefeuilles");
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.DescriptionActivite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactFaceAFace")
                        .HasColumnType("Text");

                    b.Property<string>("ContactFonction")
                        .HasColumnType("Text");

                    b.Property<string>("ContactOrigine")
                        .HasColumnType("Text");

                    b.Property<string>("ContactRole")
                        .HasColumnType("Text");

                    b.Property<string>("ContactTelephone")
                        .HasColumnType("Text");

                    b.Property<string>("EntretienDeroulement")
                        .HasColumnType("Text");

                    b.Property<string>("EntretienObjectifs")
                        .HasColumnType("Text");

                    b.Property<int>("FicheId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FicheId");

                    b.ToTable("DescriptionsActivite");
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.Etudiant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FicheId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("FicheId");

                    b.ToTable("Etudiants");
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.Fiche", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumeroFiche")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Fiches");
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.FicheClientProspect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AgesEnfants")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Anciennete")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Autre")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("CodePostal")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("FicheId")
                        .HasColumnType("int");

                    b.Property<bool>("IsClient")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("NbEnfants")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Placements")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Revenus")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Sexe")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SituationFamiliale")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("SituationProfessionnelle")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("TauxImposition")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Ville")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("FicheId");

                    b.ToTable("FichesClientProspect");
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.FicheContexteSimplifiee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionsCommerciales")
                        .HasColumnType("Text");

                    b.Property<string>("ActivitesEntreprise")
                        .HasColumnType("Text");

                    b.Property<string>("Cible")
                        .HasColumnType("Text");

                    b.Property<string>("CompagnieMandante")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("EntrepriseNom")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("FicheId")
                        .HasColumnType("int");

                    b.Property<string>("Historique")
                        .HasColumnType("Text");

                    b.Property<int>("NumeroFiche")
                        .HasColumnType("int");

                    b.Property<string>("PresentationPortefeuilleClients")
                        .HasColumnType("Text");

                    b.Property<string>("ReductionsAutre")
                        .HasColumnType("Text");

                    b.Property<string>("ReductionsMontant")
                        .HasColumnType("Text");

                    b.Property<string>("ReductionsNature")
                        .HasColumnType("Text");

                    b.Property<string>("ReductionsPeriode")
                        .HasColumnType("Text");

                    b.HasKey("Id");

                    b.HasIndex("FicheId");

                    b.ToTable("FichesContexteSimplifiee");
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.FicheFin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AutoEvaluation")
                        .HasColumnType("Text");

                    b.Property<int>("FicheId")
                        .HasColumnType("int");

                    b.Property<string>("InformationsAConserver")
                        .HasColumnType("Text");

                    b.Property<string>("PlanificationActions")
                        .HasColumnType("Text");

                    b.HasKey("Id");

                    b.HasIndex("FicheId");

                    b.ToTable("FichesFin");
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.Phase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FicheId")
                        .HasColumnType("int");

                    b.Property<string>("PhaseAsseoirVente")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<string>("PhaseConclusion")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<string>("PhaseContact")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<string>("PhaseDecouverte")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<string>("PhasePriseConge")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<string>("PhaseTransition")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<string>("PhaseVente")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.HasKey("Id");

                    b.HasIndex("FicheId");

                    b.ToTable("Phases");
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.Activite", b =>
                {
                    b.HasOne("Stratom.Form.Core.Models.Fiche", "Fiche")
                        .WithMany("Activites")
                        .HasForeignKey("FicheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.ActiviteType", b =>
                {
                    b.HasOne("Stratom.Form.Core.Models.Fiche", "Fiche")
                        .WithMany("ActiviteTypes")
                        .HasForeignKey("FicheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.AssuranceDommage", b =>
                {
                    b.HasOne("Stratom.Form.Core.Models.Fiche", "Fiche")
                        .WithMany("AssurancesDommage")
                        .HasForeignKey("FicheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.AssurancePersonne", b =>
                {
                    b.HasOne("Stratom.Form.Core.Models.Fiche", "Fiche")
                        .WithMany("AssurancesPersonne")
                        .HasForeignKey("FicheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.Concerne", b =>
                {
                    b.HasOne("Stratom.Form.Core.Models.Fiche", "Fiche")
                        .WithMany("Concernes")
                        .HasForeignKey("FicheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.ContratsPortefeuille", b =>
                {
                    b.HasOne("Stratom.Form.Core.Models.Fiche", "Fiche")
                        .WithMany("ContratsPortefeuilles")
                        .HasForeignKey("FicheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.DescriptionActivite", b =>
                {
                    b.HasOne("Stratom.Form.Core.Models.Fiche", "Fiche")
                        .WithMany("DescriptionsActivite")
                        .HasForeignKey("FicheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.Etudiant", b =>
                {
                    b.HasOne("Stratom.Form.Core.Models.Fiche", "Fiche")
                        .WithMany("Etudiants")
                        .HasForeignKey("FicheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.FicheClientProspect", b =>
                {
                    b.HasOne("Stratom.Form.Core.Models.Fiche", "Fiche")
                        .WithMany("FichesClientProspect")
                        .HasForeignKey("FicheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.FicheContexteSimplifiee", b =>
                {
                    b.HasOne("Stratom.Form.Core.Models.Fiche", "Fiche")
                        .WithMany("FichesContexteSimplifiee")
                        .HasForeignKey("FicheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.FicheFin", b =>
                {
                    b.HasOne("Stratom.Form.Core.Models.Fiche", "Fiche")
                        .WithMany("FichesFin")
                        .HasForeignKey("FicheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stratom.Form.Core.Models.Phase", b =>
                {
                    b.HasOne("Stratom.Form.Core.Models.Fiche", "Fiche")
                        .WithMany("Phases")
                        .HasForeignKey("FicheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
